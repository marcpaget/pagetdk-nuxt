import { unref } from "vue";
import { formDataToObject, isFormData, isSerializedFormData, objectToFormData } from "./formData.mjs";
export function resolveUnref(r) {
  return typeof r === "function" ? r() : unref(r);
}
export function getFetchHandler(nuxt, { localFetch = true } = {}) {
  if (process.client || !localFetch)
    return globalThis.$fetch;
  const event = nuxt.ssrContext?.event;
  return event?.$fetch || globalThis.$fetch;
}
export function headersToObject(headers = {}) {
  if (typeof Headers !== "undefined" && headers instanceof Headers)
    return Object.fromEntries([...headers.entries()]);
  if (Array.isArray(headers))
    return Object.fromEntries(headers);
  return headers;
}
export async function serializeMaybeEncodedBody(value) {
  if (isFormData(value))
    return await formDataToObject(value);
  return value;
}
export async function deserializeMaybeEncodedBody(value) {
  if (isSerializedFormData(value))
    return await objectToFormData(value);
  return value;
}
