import type { NitroFetchOptions } from 'nitropack';
import type { Ref } from 'vue';
import type { ApiFetchOptions } from './composables/$api';
export type EndpointFetchOptions = NitroFetchOptions<string> & {
    path: string;
};
export type MaybeRef<T> = T | Ref<T>;
export type MaybeRefOrGetter<T> = MaybeRef<T> | (() => T);
export declare function toValue<T>(r: MaybeRefOrGetter<T>): T;
export declare function headersToObject(headers?: HeadersInit): Record<string, string>;
export declare function serializeMaybeEncodedBody(value: ApiFetchOptions['body']): Promise<string | Record<string, any> | null | undefined>;
export declare function deserializeMaybeEncodedBody(value: ApiFetchOptions['body']): Promise<string | FormData | Record<string, any> | null | undefined>;
