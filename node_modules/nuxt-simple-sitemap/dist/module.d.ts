import * as _nuxt_schema from '@nuxt/schema';
import { SitemapStreamOptions, SitemapStream } from 'sitemap';
import { SitemapItemLoose } from 'sitemap/dist/lib/types';

interface CreateFilterOptions {
    include?: (string | RegExp)[];
    exclude?: (string | RegExp)[];
}

type MaybeFunction<T> = T | (() => T);
type MaybePromise<T> = T | Promise<T>;
type SitemapEntry = SitemapItemLoose | string;
interface ModuleOptions extends CreateFilterOptions, SitemapStreamOptions {
    /**
     * Whether the sitemap.xml should be generated.
     *
     * @default true
     */
    enabled: boolean;
    /**
     * Should the URLs be inserted with a trailing slash.
     *
     * @default false
     */
    trailingSlash: boolean;
    /**
     * Default options to pass for each sitemap entry.
     */
    defaults: Partial<SitemapItemLoose>;
    /**
     * Defaults URLS to be included in the sitemap.
     */
    urls: MaybeFunction<MaybePromise<SitemapEntry[]>>;
    devPreview: boolean;
    inferStaticPagesAsRoutes: boolean;
}
interface ModuleHooks {
    'sitemap:generate': (ctx: {
        urls: SitemapItemLoose[];
        sitemap: SitemapStream;
    }) => Promise<void> | void;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

export { MaybeFunction, MaybePromise, ModuleHooks, ModuleOptions, SitemapEntry, _default as default };
