import{_ as z}from"./Badge.49aad048.js";import{_ as G}from"./NCodeBlock.vue.f20ad1f9.js";import{a as P,o as p,h as g,L as $,c as F,y as b,f as k,H,ao as K,ap as L,z as y,C as h,X as M,aq as W,ar as X,u as a,t as I,F as R,i as s,w as d,K as T,l as _,k as J,as as O}from"./entry.902f663c.js";import{_ as Q}from"./NCheckbox.vue.efe5a5b6.js";const Y={class:"n-tip n-tip-base"},Z=P({__name:"NTip",props:{icon:null},setup(e){return(t,r)=>{const n=H;return p(),g("div",Y,[$(t.$slots,"icon",{},()=>[e.icon?(p(),F(n,{key:0,icon:e.icon,class:"n-tip-icon"},null,8,["icon"])):b("",!0)]),k("div",null,[$(t.$slots,"default")])])}}}),x=new Map;function ee(e,t){const r=e;return x.has(r)||x.set(r,te(e,t)),x.get(r)}function te(e,t){const r=K(),n=L(`npm:check:${e}`,()=>y.checkForUpdateFor(e)).data,i=h("idle"),c=h();r.hook("devtools:terminal:exit",({id:l,code:o})=>{l!==c||!c||(i.value=o===0?"updated":"idle")});async function N(l){if(i.value!=="idle")return;const o=await y.getNpmCommand("update",e,t);if(o&&await l(o.join(" ")))return i.value="running",c.value=(await y.runNpmCommand("update",e,t))?.processId,c.value}async function C(){i.value==="updated"&&await y.restartNuxt()}return{info:n,state:i,update:N,restart:C,processId:c}}const ae={key:0},ne={p4:"",flex:"~ col gap-1"},oe={class:"text-lg font-medium leading-6"},se=k("p",{op50:""}," The following command will be executed in your terminal: ",-1),re={flex:"~ gap-3",mt2:"","justify-end":""},de=P({__name:"NpmVersionCheck",props:{packageName:null,options:null,showVersion:{type:Boolean,default:!0}},setup(e){const t=e,r=M(),{info:n,update:i,state:c,processId:N,restart:C}=ee(t.packageName,t.options),l=h(!0),o=h(!0),j=W(),w=X();async function V(){const m=await i(async u=>w.start(u));m&&o.value&&j.value.push({id:m,message:`${t.packageName} has been updated. Do you want to restart the Nuxt server now?`}),m&&l.value&&r.push(`/modules/terminals?id=${encodeURIComponent(m)}`)}return(m,u)=>{const U=z,S=G,B=Q,A=Z,D=J,E=O;return p(),g(R,null,[$(m.$slots,"default",{id:a(N),info:a(n),update:V,state:a(c),restart:a(C)},()=>[a(n)&&e.showVersion?(p(),g("code",ae,I(`v${a(n).current}`),1)):b("",!0),a(n)?.latest?(p(),g(R,{key:1},[a(n).needsUpdate?(p(),g("button",{key:0,onClick:u[0]||(u[0]=v=>V())},[s(U,{"bg-green-400:10":"","text-green-400":"",title:"updates available",textContent:"updates available"})])):(p(),F(U,{key:1,"bg-gray-400:10":"","text-gray-400":"",title:"latest",textContent:"latest"}))],64)):b("",!0)]),s(a(w),null,{default:d(({resolve:v,args:q})=>[s(E,{"model-value":!0,onClose:f=>v(!1)},{default:d(()=>[k("div",ne,[k("h3",oe," Update "+I(t.packageName)+"? ",1),se,s(S,{code:q[0],lang:"bash",my3:"",px4:"",py2:"",border:"~ base rounded",lines:!1},null,8,["code"]),s(B,{modelValue:a(l),"onUpdate:modelValue":u[1]||(u[1]=f=>T(l)?l.value=f:null),n:"primary"},{default:d(()=>[_(" Navigate to terminal ")]),_:1},8,["modelValue"]),s(B,{modelValue:a(o),"onUpdate:modelValue":u[2]||(u[2]=f=>T(o)?o.value=f:null),n:"primary"},{default:d(()=>[_(" Restart Nuxt server after update ")]),_:1},8,["modelValue"]),k("div",re,[s(A,{n:"sm purple","flex-auto":"",icon:"carbon-chemistry"},{default:d(()=>[_(" Experimental feature. Please make sure to backup your project first. ")]),_:1}),s(D,{onClick:f=>v(!1)},{default:d(()=>[_(" Cancel ")]),_:2},1032,["onClick"]),s(D,{n:"solid primary",onClick:f=>v(!0)},{default:d(()=>[_(" Update ")]),_:2},1032,["onClick"])])])]),_:2},1032,["onClose"])]),_:1})],64)}}});export{de as _,Z as a};
