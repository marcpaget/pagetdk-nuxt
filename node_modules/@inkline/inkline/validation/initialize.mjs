import {
  defaultValidationValues,
  reservedValidationFields,
  defaultFieldValidationValues
} from "@inkline/inkline/constants";
export function initialize(schema) {
  const isField = Object.keys(schema).length === 0 || Array.isArray(schema.validators) || schema.hasOwnProperty("value");
  const defaultValues = isField ? { ...defaultValidationValues, ...defaultFieldValidationValues } : defaultValidationValues;
  Object.entries(defaultValues).forEach(([key, value]) => {
    if (!schema.hasOwnProperty(key)) {
      schema[key] = value;
    }
  });
  Object.keys(schema).filter((key) => !reservedValidationFields.includes(key)).forEach((key) => {
    if (typeof schema[key] === "object" || Array.isArray(schema[key])) {
      schema[key] = initialize(schema[key]);
    }
  });
  return schema;
}
