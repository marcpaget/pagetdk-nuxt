declare const _default: import("vue").DefineComponent<{
    /**
     * Determines if the navbar should close when clicking a navbar item
     * @type Boolean
     * @default true
     * @name collapseOnItemClick
     */
    collapseOnItemClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * Determines if the navbar should close when clicking outside
     * @type Boolean
     * @default true
     * @name collapseOnClickOutside
     */
    collapseOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The color variant of the navbar
     * @type light | dark
     * @default light
     * @name color
     */
    color: {
        type: StringConstructor;
        default: any;
    };
    /**
     * Display the inner container as fluid, spanning 100% width
     * @type Boolean
     * @default false
     * @name fluid
     */
    fluid: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The size variant of the navbar
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
        type: StringConstructor;
        default: any;
        validator: any;
    };
    /**
     * The animation of the hamburger menu component used for collapsing
     * @type close | arrow-up | arrow-down | arrow-left | arrow-right | plus | minus
     * @default close
     * @name menuAnimation
     */
    menuAnimation: {
        type: StringConstructor;
        default: string;
    };
}, unknown, unknown, {
    classes(): Classes;
}, {
    onItemClick(): void;
    onClickOutside(): void;
}, any, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * Determines if the navbar should close when clicking a navbar item
     * @type Boolean
     * @default true
     * @name collapseOnItemClick
     */
    collapseOnItemClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * Determines if the navbar should close when clicking outside
     * @type Boolean
     * @default true
     * @name collapseOnClickOutside
     */
    collapseOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The color variant of the navbar
     * @type light | dark
     * @default light
     * @name color
     */
    color: {
        type: StringConstructor;
        default: any;
    };
    /**
     * Display the inner container as fluid, spanning 100% width
     * @type Boolean
     * @default false
     * @name fluid
     */
    fluid: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The size variant of the navbar
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
        type: StringConstructor;
        default: any;
        validator: any;
    };
    /**
     * The animation of the hamburger menu component used for collapsing
     * @type close | arrow-up | arrow-down | arrow-left | arrow-right | plus | minus
     * @default close
     * @name menuAnimation
     */
    menuAnimation: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    color: string;
    size: string;
    fluid: boolean;
    collapseOnItemClick: boolean;
    collapseOnClickOutside: boolean;
    menuAnimation: string;
}>;
export default _default;
