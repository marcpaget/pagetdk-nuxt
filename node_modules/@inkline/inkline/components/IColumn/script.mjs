import { defineComponent } from "vue";
import { breakpointKeys } from "@inkline/inkline/constants";
import { breakpointClass, capitalizeFirst } from "@inkline/inkline/helpers";
export const properties = {};
for (const breakpoint of breakpointKeys) {
  if (breakpoint !== "") {
    properties[breakpoint] = {
      type: [String, Boolean, Number],
      default: false
    };
  }
  for (const property of ["first", "last"]) {
    properties[`${property}${capitalizeFirst(breakpoint)}`] = {
      type: Boolean,
      default: false
    };
  }
  for (const property of ["offset", "push", "pull"]) {
    properties[`${property}${capitalizeFirst(breakpoint)}`] = {
      type: [String, Number],
      default: ""
    };
  }
}
const componentName = "IColumn";
export default defineComponent({
  name: componentName,
  inheritAttrs: false,
  props: properties,
  computed: {
    classes() {
      return Object.keys(properties).reduce((acc, property) => {
        if (this[property]) {
          acc[breakpointClass(`-${property}`, this[property])] = true;
        }
        return acc;
      }, {});
    }
  }
});
