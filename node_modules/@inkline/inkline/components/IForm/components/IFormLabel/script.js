"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
module.exports = void 0;
var _vue = require("vue");
var _mixins = require("@inkline/inkline/mixins");
const componentName = "IFormLabel";
var _default = (0, _vue.defineComponent)({
  name: componentName,
  mixins: [_mixins.FormComponentMixin],
  props: {
    /**
     * The id of the target input to be focused by the form label. If left empty, clicking the form label will focus the next sibling input
     * @type String
     * @default
     * @name for
     */
    for: {
      type: String,
      default: ""
    },
    /**
     * The placement of the form label
     * @type left | right
     * @default left
     * @name placement
     */
    placement: {
      type: String,
      default: ""
    },
    /**
     * The size variant of the form label
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "size"),
      validator: _mixins.sizePropValidator
    }
  },
  computed: {
    classes() {
      return {
        [`-${this.size}`]: Boolean(this.size),
        [`-${this.placement}`]: Boolean(this.placement)
      };
    },
    forAttr() {
      return this.for;
    }
  },
  methods: {
    getNextSibling() {
      return this.$el.nextSibling.querySelector("input, textarea");
    },
    onClick() {
      if (this.for) {
        return;
      }
      this.getNextSibling()?.focus();
    }
  }
});
module.exports = _default;