declare const _default: import("vue").DefineComponent<{
    /**
     * Display the collapsible as an accordion, keeping a maximum of one open collapsible item
     * @type Boolean
     * @default false
     * @name accordion
     */
    accordion: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The color variant of the button
     * @type light | dark | blank
     * @default light
     * @name color
     */
    color: {
        type: StringConstructor;
        default: any;
    };
    /**
     * The size variant of the collapsible
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
        type: StringConstructor;
        default: any;
        validator: any;
    };
    /**
     * Used to determine which collapsible item is open
     * @type String[]
     * @default
     * @name modelValue
     */
    modelValue: {
        type: ArrayConstructor;
        default: () => any[];
    };
}, unknown, {
    activeItems: any[];
}, {
    classes(): Classes;
}, {
    onItemClick(item: any): any;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * Display the collapsible as an accordion, keeping a maximum of one open collapsible item
     * @type Boolean
     * @default false
     * @name accordion
     */
    accordion: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The color variant of the button
     * @type light | dark | blank
     * @default light
     * @name color
     */
    color: {
        type: StringConstructor;
        default: any;
    };
    /**
     * The size variant of the collapsible
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
        type: StringConstructor;
        default: any;
        validator: any;
    };
    /**
     * Used to determine which collapsible item is open
     * @type String[]
     * @default
     * @name modelValue
     */
    modelValue: {
        type: ArrayConstructor;
        default: () => any[];
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    color: string;
    size: string;
    modelValue: unknown[];
    accordion: boolean;
}>;
export default _default;
