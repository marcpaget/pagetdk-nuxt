"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
module.exports = void 0;
var _vue = require("vue");
var _mixins = require("@inkline/inkline/mixins");
var _index = _interopRequireDefault(require("@inkline/inkline/components/IContainer/index.vue"));
var _index2 = _interopRequireDefault(require("@inkline/inkline/components/IRow/index.vue"));
var _index3 = _interopRequireDefault(require("@inkline/inkline/components/IColumn/index.vue"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const componentName = "IHeader";
var _default = (0, _vue.defineComponent)({
  name: componentName,
  components: {
    IContainer: _index.default,
    IRow: _index2.default,
    IColumn: _index3.default
  },
  inheritAttrs: false,
  props: {
    /**
     * The color variant of the header
     * @type primary | light | dark
     * @default light
     * @name color
     */
    color: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "color")
    },
    /**
     * Display the header background as cover, always covering the whole header width or height
     * @type Boolean
     * @default false
     * @name cover
     */
    cover: {
      type: Boolean,
      default: false
    },
    /**
     * Display the inner content container as fluid, covering 100% of the header width
     * @type Boolean
     * @default false
     * @name fluid
     */
    fluid: {
      type: Boolean,
      default: false
    },
    /**
     * Display the header as fullscreen, covering 100% screen height and 100% screen width
     * @type Boolean
     * @default true
     * @name fullscreen
     */
    fullscreen: {
      type: Boolean,
      default: false
    },
    /**
     * The size variant of the header
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "size"),
      validator: _mixins.sizePropValidator
    }
  },
  computed: {
    classes() {
      return {
        ...(0, _mixins.colorVariantClass)(this),
        [`-${this.size}`]: Boolean(this.size),
        "-cover": this.cover,
        "-fullscreen": this.fullscreen
      };
    }
  }
});
module.exports = _default;