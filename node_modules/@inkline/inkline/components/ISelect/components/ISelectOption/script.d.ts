/**
 * Slot for default select option content
 * @name default
 * @kind slot
 */
export interface SelectOption {
    active?: boolean;
    disabled?: boolean;
    label: string;
    value: any;
    [key: string]: any;
}
declare const _default: import("vue").DefineComponent<{
    /**
     * The active state of the select option
     * @type Boolean
     * @default false
     * @name active
     */
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The disabled state of the select option
     * @type Boolean
     * @default false
     * @name disabled
     */
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The label of the select option
     * @type String
     * @default ''
     * @name label
     */
    label: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The tabindex of the list group item
     * @type Number | String
     * @default 0
     * @name tabindex
     */
    tabindex: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    /**
     * The select option value
     * @type Object | String | Number
     * @default {}
     * @name value
     */
    value: {
        type: (ObjectConstructor | StringConstructor | NumberConstructor)[];
        default: () => any;
    };
}, unknown, unknown, {
    ariaDisabled(): "true" | "false";
    ariaSelected(): "true" | "false";
    isActive(): boolean;
    classes(): Classes;
    tabIndex(): number | string;
}, {
    onClick(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * The active state of the select option
     * @type Boolean
     * @default false
     * @name active
     */
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The disabled state of the select option
     * @type Boolean
     * @default false
     * @name disabled
     */
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * The label of the select option
     * @type String
     * @default ''
     * @name label
     */
    label: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The tabindex of the list group item
     * @type Number | String
     * @default 0
     * @name tabindex
     */
    tabindex: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    /**
     * The select option value
     * @type Object | String | Number
     * @default {}
     * @name value
     */
    value: {
        type: (ObjectConstructor | StringConstructor | NumberConstructor)[];
        default: () => any;
    };
}>>, {
    value: string | number | Record<string, any>;
    label: string;
    disabled: boolean;
    tabindex: string | number;
    active: boolean;
}>;
export default _default;
