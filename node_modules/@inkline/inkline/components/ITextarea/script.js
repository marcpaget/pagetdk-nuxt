"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
module.exports = void 0;
var _vue = require("vue");
var _helpers = require("@inkline/inkline/helpers");
var _mixins = require("@inkline/inkline/mixins");
var _index = _interopRequireDefault(require("@inkline/inkline/components/IInput/index.vue"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const componentName = "ITextarea";
var _default = (0, _vue.defineComponent)({
  name: componentName,
  extends: _index.default,
  inheritAttrs: false,
  props: {
    /**
     * The color variant of the textarea
     * @type light | dark
     * @default light
     * @name color
     */
    color: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "color")
    },
    /**
     * Display the textarea as clearable
     * @type Boolean
     * @default false
     * @name clearable
     */
    clearable: {
      type: Boolean,
      default: false
    },
    /**
     * The disabled state of the textarea
     * @type Boolean
     * @default false
     * @name disabled
     */
    disabled: {
      type: Boolean,
      default: false
    },
    /**
     * The id of the internal textarea element
     * @type String
     * @default
     * @name id
     */
    id: {
      type: String,
      default: ""
    },
    /**
     * Used to set the field value
     * @type Boolean
     * @default false
     * @name modelValue
     */
    modelValue: {
      type: String,
      default: ""
    },
    /**
     * The unique identifier of the textarea
     * @type String
     * @default uid()
     * @name name
     */
    name: {
      type: [String, Number],
      default() {
        return (0, _helpers.uid)("textarea");
      }
    },
    /**
     * The readonly state of the textarea
     * @type Boolean
     * @default false
     * @name readonly
     */
    readonly: {
      type: Boolean,
      default: false
    },
    /**
     * The size variant of the textarea
     * @type sm | md | lg
     * @default md
     * @name size
     */
    size: {
      type: String,
      default: (0, _mixins.defaultPropValue)(componentName, "size"),
      validator: _mixins.sizePropValidator
    },
    /**
     * The tabindex of the textarea
     * @type Number | String
     * @default 0
     * @name tabindex
     */
    tabindex: {
      type: [Number, String],
      default: 0
    }
  },
  emits: [
  /**
   * Event emitted for setting the modelValue
   * @event update:modelValue
   */
  "update:modelValue"]
});
module.exports = _default;