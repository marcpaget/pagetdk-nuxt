import { defineComponent } from "vue";
import { breakpointKeys } from "@inkline/inkline/constants";
import { breakpointClass, capitalizeFirst } from "@inkline/inkline/helpers";
const properties = {};
for (const breakpoint of breakpointKeys) {
  for (const property of ["start", "center", "end", "top", "middle", "bottom", "around", "between", "reverse"]) {
    properties[`${property}${capitalizeFirst(breakpoint)}`] = {
      type: Boolean,
      default: false
    };
  }
}
const componentName = "IRow";
export default defineComponent({
  name: componentName,
  inheritAttrs: false,
  props: {
    noGutter: {
      type: Boolean,
      default: false
    },
    noCollapse: {
      type: Boolean,
      default: false
    },
    ...properties
  },
  computed: {
    classes() {
      const responsiveClasses = Object.keys(properties).reduce((acc, property) => {
        if (this[property]) {
          acc[breakpointClass(`-${property}`, this[property])] = true;
        }
        return acc;
      }, {});
      return {
        "-no-gutter": this.noGutter,
        "-no-collapse": this.noCollapse,
        ...responsiveClasses
      };
    }
  }
});
