import Cookies from "js-cookie";
import slugify from "@sindresorhus/slugify";
import { LOCALE_DEFAULT } from "./constants.mjs";
export const getAllCookieIdsString = (moduleOptions) => getCookieIds([
  ...moduleOptions.cookies.necessary,
  ...moduleOptions.cookies.optional
]).join("");
export const getCookie = (name) => Cookies.get(name);
export const getCookieId = (cookie) => cookie.id || slugify(resolveTranslatable(cookie.name));
export const getCookieIds = (cookies) => cookies.map((cookie) => getCookieId(cookie));
export const removeCookie = (name) => Cookies.remove(name);
export const resolveTranslatable = (translatable, locale = LOCALE_DEFAULT) => {
  if (typeof translatable === "string")
    return translatable;
  if (!locale)
    throw new Error("No locale given for translatable that is not a string.");
  const result = translatable[locale];
  if (!result)
    throw new Error(`Could not get translation for locale ${locale}.`);
  return result;
};
export const setCookie = (name, value, options) => Cookies.set(name, value, { sameSite: "Strict", ...options });
export const useResolveTranslatable = (locale = LOCALE_DEFAULT) => {
  return (translatable) => resolveTranslatable(translatable, locale);
};
