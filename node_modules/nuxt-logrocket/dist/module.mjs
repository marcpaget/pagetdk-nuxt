import { defu } from 'defu';
import { useLogger, createResolver, defineNuxtModule, isNuxt3, addPlugin } from '@nuxt/kit';

const name = "nuxt-logrocket";
const version = "2.0.6";

const logger = useLogger("nuxt-logrocket");
const { resolve } = createResolver(import.meta.url);
const module = defineNuxtModule({
  meta: {
    name,
    version,
    configKey: "logRocket",
    compatibility: {
      bridge: true
    }
  },
  defaults: (nuxt) => ({
    dev: nuxt.options.dev,
    enablePinia: nuxt.options.modules.includes("@pinia/nuxt"),
    config: {
      console: {
        isEnabled: true
      },
      network: {
        isEnabled: true
      },
      dom: {
        isEnabled: true,
        inputSanitizer: false,
        textSanitizer: false
      },
      shouldCaptureIP: true,
      shouldDebugLog: true,
      mergeIframes: false
    }
  }),
  setup(opts, nuxt) {
    const options = defu(
      isNuxt3() ? nuxt.options.runtimeConfig.public?.logRocket : nuxt.options.publicRuntimeConfig.logRocket || {},
      opts
    );
    if (isNuxt3()) {
      nuxt.options.runtimeConfig.public.logRocket = options;
    } else {
      nuxt.options.publicRuntimeConfig.logRocket = options;
    }
    if (!options?.id) {
      logger.warn("LogRocket ID not found.");
    }
    if (options?.enablePinia) {
      logger.info("LogRocket pinia mode enabled.");
    }
    addPlugin(resolve("runtime/plugin.client"));
  }
});

export { module as default };
