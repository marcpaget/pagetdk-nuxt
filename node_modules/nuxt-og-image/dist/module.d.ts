import * as _nuxt_schema from '@nuxt/schema';
import { SatoriOptions } from 'satori';

interface ScreenshotOptions {
    colorScheme?: 'dark' | 'light';
    selector?: string;
    mask?: string;
    /**
     * The width of the screenshot.
     *
     * @default 1200
     */
    width: number;
    /**
     * The height of the screenshot.
     *
     * @default 630
     */
    height: number;
    /**
     * How long to wait before taking the screenshot. Useful for waiting for animations.
     */
    delay?: number;
}
interface OgImageOptions extends Partial<ScreenshotOptions> {
    provider?: 'browser' | 'satori';
    static?: boolean;
    title?: string;
    description?: string;
    component?: string | null;
    alt?: string;
    [key: string]: any;
}

interface ModuleOptions {
    /**
     * The hostname of your website.
     */
    host: string;
    defaults: OgImageOptions;
    fonts: `${string}:${number}`[];
    satoriOptions: Partial<SatoriOptions>;
    forcePrerender: boolean;
    satoriProvider: boolean;
    browserProvider: boolean;
    experimentalInlineWasm: boolean;
    experimentalRuntimeBrowser: boolean;
    playground: boolean;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

export { ModuleOptions, _default as default };
