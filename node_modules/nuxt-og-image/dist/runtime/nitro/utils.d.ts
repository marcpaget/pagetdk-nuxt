/// <reference types="node" />
import type { H3Event } from 'h3';
import type { OgImageOptions } from '../../types';
export declare function wasmLoader(key: any, fallback: string, baseUrl: string): {
    loaded(): boolean | Promise<any>;
    load(): Promise<any>;
};
export declare function fetchOptions(e: H3Event, path: string): Promise<OgImageOptions>;
export declare function base64ToArrayBuffer(base64: string): ArrayBuffer;
export declare function renderIsland(payload: OgImageOptions): Promise<{
    html: string;
    head: any;
}>;
export declare function useHostname(e: H3Event): string;
export declare function readPublicAsset(file: string, encoding?: BufferEncoding): Promise<string | Buffer | undefined>;
export declare function readPublicAssetBase64(file: string): Promise<string | undefined>;
export * from './utils-pure';
